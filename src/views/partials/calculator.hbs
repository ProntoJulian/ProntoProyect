<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculadora de Selección</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .calculator {
            padding: 15px;
        }

        .calculator table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 15px;
        }

        .calculator td {
            border: 1px solid #ddd;
            padding: 10px;
            text-align: center;
            cursor: pointer;
            border-radius: 5px;
        }

        .calculator td:hover {
            background-color: #f0f0f0;
        }

        .buttons {
            margin-top: 10px;
            text-align: center;
        }

        .buttons button {
            margin: 5px;
            padding: 10px 20px;
            border: 1px solid #ccc;
            border-radius: 5px;
            cursor: pointer;
            background-color: #f9f9f9;
            color: black;
            width: 120px;
        }

        .buttons button:hover {
            background-color: #e9e9e9;
        }

        .tab-buttons {
            display: flex;
            justify-content: space-around;
            background-color: #333;
            color: white;
            padding: 10px 0;
            border-radius: 5px 5px 0 0;
        }

        .tab-buttons div {
            cursor: pointer;
            padding: 10px 20px;
        }

        .tab-buttons div:hover {
            background-color: #555;
        }

        .tab-content {
            display: none;
        }

        .result-display {
            background-color: #f9f9f9;
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 10px;
            margin-bottom: 15px;
            min-height: 50px;
            white-space: pre-wrap;
        }

        .result-display .btn {
            margin-right: 5px;
            margin-bottom: 5px;
        }

        .disabled {
            color: #ccc;
            pointer-events: none;
        }
    </style>
</head>

<body>
    <input type="text" id="result" class="form-control" placeholder="Nombre" readonly data-toggle="modal"
        data-target="#calculatorModal">
    <div class="modal fade" id="calculatorModal" tabindex="-1" role="dialog" aria-labelledby="calculatorModalLabel"
        aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="calculatorModalLabel">Calculadora de Selección</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="calculator">
                        <div class="tab-buttons">
                            <div onclick="showTab('fields')">FIELDS</div>
                            <div onclick="showTab('operators')">OPERATORS</div>
                            <div onclick="showTab('values')">VALUES</div>
                            <div onclick="showTab('logical_operators')">LOGICAL OPERATORS</div>
                        </div>
                        <div class="result-display" id="currentSelection"></div>
                        <div id="fields" class="tab-content">

                            <table id="fieldsTable">
                                <!-- Campos se cargarán dinámicamente aquí -->
                            </table>
                        </div>
                        <div id="operators" class="tab-content">
                            <table id="operatorTable">
                                <!-- Los operadores se cargarán dinámicamente aquí -->
                            </table>
                        </div>
                        <div id="values" class="tab-content">
                            <table id="valueTable">
                                <!-- Los valores se cargarán dinámicamente aquí -->
                            </table>
                        </div>
                        <div id="logical_operators" class="tab-content">
                            <table>
                                <tr>
                                    <td onclick="selectLogicalOperator('AND')">AND</td>
                                    <td onclick="selectLogicalOperator('OR')">OR</td>
                                </tr>
                            </table>
                        </div>
                        <div id="group" class="tab-content">
                            <table>
                                <tr>
                                    <td>Grupo1</td>
                                    <td>Grupo2</td>
                                    <td>Grupo3</td>
                                    <td>Grupo4</td>
                                </tr>
                            </table>
                        </div>
                        <div class="buttons">
                            <button onclick="clearAll()" class="btn btn-secondary">Borrar todo</button>
                            <button onclick="clearLast()" class="btn btn-secondary">Borrar último</button>
                            <button onclick="finalize()" class="btn btn-primary">Finalizar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.3/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>


        var operators = {
            type: ['=', '!='],
            price: ['=', '!=', '>', '<', '>=', '<='],
            is_featured: ['=', '!='],
            availability: ['=', '!='],
            is_visible: ['=', '!='],
            is_free_shipping: ['=', '!=']
        };

        var values = {
            type: ['digital', 'physical'],
            price: [], // Puedes llenar esto según tus necesidades
            is_featured: ['true', 'false'],
            availability: ['available', 'disabled', 'preorder'],
            is_visible: ['true', 'false'],
            is_free_shipping: ['true', 'false']
        };

        var fields = ['type', 'price', 'is_featured', 'availability', 'is_visible', 'is_free_shipping'];
        var selectedFields = new Set(); // Almacena los campos seleccionados
        var currentExpression = []; // Almacena la expresión actual
        var fullExpression = []; // Almacena la expresión completa

        function loadFields() {
            var fieldsTable = document.getElementById('fieldsTable');
            fieldsTable.innerHTML = ''; // Limpiar campos anteriores
            var row = document.createElement('tr');
            fields.forEach(function (field, index) {
                var cell = document.createElement('td');
                cell.innerText = field;
                cell.className = (selectedFields.has(field) && field !== 'price') ? 'disabled' : '';
                cell.onclick = function () {
                    if (!selectedFields.has(field) || field === 'price') {
                        selectField(field);
                    }
                };
                row.appendChild(cell);
                // Crear una nueva fila cada 4 campos
                if ((index + 1) % 4 === 0) {
                    fieldsTable.appendChild(row);
                    row = document.createElement('tr');
                }
            });
            fieldsTable.appendChild(row);
        }


        function selectField(field) {
            currentExpression = [field];
            if (field !== 'price') {
                selectedFields.add(field);
            }
            loadFields(); // Actualizar campos disponibles
            loadOperators(field);
            showTab('operators');
        }

        function loadOperators(field) {
            var operatorTable = document.getElementById('operatorTable');
            operatorTable.innerHTML = ''; // Limpiar operadores anteriores
            var row = document.createElement('tr');
            operators[field].forEach(function (op) {
                var cell = document.createElement('td');
                cell.innerText = op;
                cell.onclick = function () {
                    currentExpression.push(op);
                    loadValues(field); // Cargar valores después de seleccionar un operador
                    showTab('values');
                };
                row.appendChild(cell);
            });
            operatorTable.appendChild(row);
        }

        function loadValues(field) {
            var valueTable = document.getElementById('valueTable');
            valueTable.innerHTML = ''; // Limpiar valores anteriores
            var row = document.createElement('tr');
            if (field === 'price') {
                var cell = document.createElement('td');
                var numberInput = document.createElement('input');
                numberInput.type = 'number';
                numberInput.min = 0;
                numberInput.className = 'form-control';

                var confirmButton = document.createElement('button');
                confirmButton.className = 'btn btn-success';
                confirmButton.innerText = '✔';
                confirmButton.onclick = function () {
                    currentExpression.push(numberInput.value);
                    finalizeSelection(); // Finalizar selección después de seleccionar un valor
                };

                var inputWrapper = document.createElement('div');
                inputWrapper.style.display = 'flex';
                inputWrapper.style.alignItems = 'center';
                inputWrapper.appendChild(numberInput);
                inputWrapper.appendChild(confirmButton);

                cell.appendChild(inputWrapper);
                row.appendChild(cell);
            } else {
                values[field].forEach(function (val) {
                    var cell = document.createElement('td');
                    cell.innerText = val;
                    cell.onclick = function () {
                        currentExpression.push(val);
                        finalizeSelection(); // Finalizar selección después de seleccionar un valor
                    };
                    row.appendChild(cell);
                });
            }
            valueTable.appendChild(row);
        }

        function finalizeSelection() {
            var currentSelection = document.getElementById('currentSelection');
            var expressionHtml = '[';
            currentExpression.forEach(function (item) {
                expressionHtml += '<button class="btn btn-outline-secondary" onclick="editExpression(this)">' + item + '</button> ';
            });
            expressionHtml += '] ';
            fullExpression.push(expressionHtml);
            currentSelection.innerHTML = fullExpression.join(' ');
            currentExpression = [];
            showTab('logical_operators');
        }

        function selectLogicalOperator(logicOp) {
            var currentSelection = document.getElementById('currentSelection');
            fullExpression.push('<button class="btn btn-outline-secondary" onclick="editExpression(this)">' +
                logicOp + '</button> ');
            currentSelection.innerHTML = fullExpression.join(' ');
            showTab('fields');
        }

        function editExpression(button) {
            var text = button.innerText;
            var currentSelection = document.getElementById('currentSelection');
            var index = fullExpression.findIndex(expr => expr.includes(text));
            if (index !== -1) {
                fullExpression.splice(index, 1);
            }
            if (fields.includes(text) && text !== 'price') {
                selectedFields.delete(text); // Habilitar campo al eliminar
            }
            currentSelection.innerHTML = fullExpression.join(' ');
            loadFields(); // Actualizar campos disponibles
            if (text === '[' || text === ']') {
                return;
            }
            if (fields.includes(text)) {
                currentExpression = [text];
                loadOperators(text); // Cargar operadores del campo seleccionado
                showTab('operators');
            } else if (operators[currentExpression[0]] && operators[currentExpression[0]].includes(text)) {
                currentExpression[1] = text;
                if (currentExpression[0] === 'price') {
                    showNumberSelector(currentExpression[0]); // Mostrar selector de números para price
                } else {
                    loadValues(currentExpression[0]); // Cargar valores del campo seleccionado
                }
                showTab('values');
            } else {
                loadFields(); // Volver a mostrar los campos disponibles
                showTab('fields');
            }
        }

        function toggleCalculator() {
            var calculator = document.getElementById('calculator');
            if (calculator.style.display === 'block') {
                calculator.style.display = 'none';
            } else {
                calculator.style.display = 'block';
            }
        }

        function clearAll() {
            document.getElementById('result').value = '';
            document.getElementById('currentSelection').innerHTML = '';
            currentExpression = [];
            fullExpression = [];
            selectedFields.clear();
            loadFields();
        }

        function clearLast() {
            if (fullExpression.length > 0) {
                fullExpression.pop();
                if (fullExpression.length > 0) {
                    var lastExpression = fullExpression.pop();
                    if (lastExpression) {
                        var fieldMatch = lastExpression.match(/\b(type|price|is_featured|availability)\b/);
                        if (fieldMatch && fieldMatch[0] !== 'price') {
                            selectedFields.delete(fieldMatch[0]); // Habilitar campo al eliminar
                        }
                        fullExpression.push(lastExpression); // Volver a añadir la última expresión
                    }
                }
                document.getElementById('currentSelection').innerHTML = fullExpression.join(' ');
                loadFields();
            }
        }

        function finalize() {
            if (validateExpression()) {
                var result = document.getElementById('result');
                var currentSelection = document.getElementById('currentSelection').innerText.trim();
                result.value = currentSelection;
                $('#calculatorModal').modal('hide');
            }
        }

        function validateExpression() {
            // Validar que cada condición tenga un campo, operador y valor
            let isValid = true;
            let expressionText = document.getElementById('currentSelection').innerText.trim();
            let conditions = expressionText.split(/\s(AND|OR)\s/); // Dividir por operadores lógicos

            conditions.forEach(condition => {
                // Eliminar corchetes y extraer partes
                let cleanCondition = condition.replace(/[\[\]]/g, '').trim();
                let parts = cleanCondition.split(/\s+/);

                if (parts.length !== 3) {
                    isValid = false;
                } else {
                    let field = parts[0];
                    let operator = parts[1];
                    let value = parts[2];

                    if (fields.indexOf(field) === -1 || operators[field].indexOf(operator) === -1 || (!values[field].includes(value) && field !== 'price')) {
                        isValid = false;
                    }

                    // Validar rangos de precio lógicos
                    if (field === 'price') {
                        conditions.forEach(otherCondition => {
                            let otherCleanCondition = otherCondition.replace(/[\[\]]/g, '').trim();
                            let otherParts = otherCleanCondition.split(/\s+/);
                            if (otherParts[0] === 'price' && otherParts.length === 3) {
                                let otherOperator = otherParts[1];
                                let otherValue = parseFloat(otherParts[2]);

                                if ((operator === '>' && otherOperator === '<=' && parseFloat(value) >= otherValue) ||
                                    (operator === '>=' && otherOperator === '<' && parseFloat(value) > otherValue) ||
                                    (operator === '<' && otherOperator === '>=' && parseFloat(value) <= otherValue) ||
                                    (operator === '<=' && otherOperator === '>' && parseFloat(value) < otherValue)) {
                                    isValid = false;
                                }
                            }
                        });
                    }
                }
            });

            if (!isValid) {
                alert("La expresión no es válida. Por favor, revisa las condiciones.");
            }

            return isValid;
        }

        function showTab(tabName) {
            var tabs = document.getElementsByClassName('tab-content');
            for (var i = 0; i < tabs.length; i++) {
                tabs[i].style.display = 'none';
            }
            document.getElementById(tabName).style.display = 'block';
        }

        // Mostrar la primera pestaña por defecto y cargar los campos
        document.addEventListener('DOMContentLoaded', function () {
            loadFields();
            showTab('fields');
        });
    </script>
</body>


</html>