<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crear Feed</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .content {
            padding: 1rem;
        }

        .editable {
            display: none;
        }

        .editing .editable {
            display: inline;
        }

        .editing .non-editable {
            display: none;
        }

        .toggle-password {
            cursor: pointer;
        }

        .hourglass-icon {
            font-size: 48px;
            color: #007BFF;
            animation: rotateHourglass 5s infinite linear;
        }

        @keyframes rotateHourglass {
            0% {
                transform: rotate(0deg);
            }

            50% {
                transform: rotate(180deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }
    </style>
</head>

<body>
    <div class="content">
        <div class="container mt-5">
            <div class="card">
                <div class="card-header">
                    <h2>Crear Nuevo Feed</h2>
                </div>
                <div class="card-body">
                    <form id="createForm">
                        <div class="mb-3">
                            <label for="feed_name" class="form-label">Feed Name</label>
                            <input type="text" class="form-control" id="feed_name">
                        </div>
                        <div class="mb-3">
                            <label for="domain" class="form-label">Domain</label>
                            <input type="text" class="form-control" id="domain">
                        </div>
                        <div class="mb-3">
                            <label for="store_hash" class="form-label">Store Hash</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="store_hash">
                                <span class="input-group-text toggle-password" data-toggle="store_hash"><i class="fas fa-eye"></i></span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="x_auth_token" class="form-label">x_auth_token</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="x_auth_token">
                                <span class="input-group-text toggle-password" data-toggle="x_auth_token"><i class="fas fa-eye"></i></span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="client_id" class="form-label">Merchant ID</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="client_id">
                                <span class="input-group-text toggle-password" data-toggle="client_id"><i class="fas fa-eye"></i></span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="client_email" class="form-label">Client Email</label>
                            <input type="email" class="form-control" id="client_email">
                        </div>
                        <div class="mb-3">
                            <label for="private_key" class="form-label">Private Key</label>
                            <div class="input-group">
                                <textarea class="form-control password-protected" id="private_key" rows="3" maxlength="2500"></textarea>
                                <span class="input-group-text toggle-password" data-toggle="private_key"><i class="fas fa-eye"></i></span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="formulas" class="form-label">Formulas</label>
                            <input type="text" class="form-control" id="formulas">
                        </div>
                        <div class="mb-3">
                            <label for="company_id" class="form-label">Company</label>
                            <select class="form-control" id="company_id" disabled>
                                {{#each companies}}
                                <option value="{{this.company_id}}">{{this.company_name}}</option>
                                {{/each}}
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Custom recurrence</label>
                            <div class="input-group mb-3">
                                <span class="input-group-text">Repeat every</span>
                                <select class="form-control">
                                    <option value="1">1 hour</option>
                                    <option value="3">3 hours</option>
                                    <option value="6">6 hours</option>
                                    <option value="12">12 hours</option>
                                </select>
                            </div>
                            <div class="btn-group" role="group" aria-label="Repeat on">
                                <input type="checkbox" class="btn-check" id="monday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="monday">M</label>

                                <input type="checkbox" class="btn-check" id="tuesday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="tuesday">T</label>

                                <input type="checkbox" class="btn-check" id="wednesday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="wednesday">W</label>

                                <input type="checkbox" class="btn-check" id="thursday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="thursday">T</label>

                                <input type="checkbox" class="btn-check" id="friday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="friday">F</label>

                                <input type="checkbox" class="btn-check" id="saturday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="saturday">S</label>

                                <input type="checkbox" class="btn-check" id="sunday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="sunday">S</label>
                            </div>
                        </div>
                        <div class="action-buttons">
                            <button type="button" class="btn btn-primary" id="createButton">Create</button>
                            <button type="button" class="btn btn-secondary" id="cancelButton">Cancel</button>
                            <button type="button" class="btn btn-danger" id="deleteAllButton"><i class="fas fa-trash"></i> Eliminar Todo</button>
                            <button type="button" class="btn btn-warning" id="undoButton"><i class="fas fa-undo"></i> Deshacer</button>
                            <button type="button" class="btn btn-success" id="finishButton"><i class="fas fa-check"></i> Terminar</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para las Formulas -->
    <div class="modal fade" id="formulasModal" tabindex="-1" aria-labelledby="formulasModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="formulasModalLabel">Edit Formulas</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="formulaText" class="form-label">Formulas</label>
                        <input type="text" class="form-control" id="formulaText">
                    </div>
                    <button type="button" class="btn btn-secondary" id="closeModalButton" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const togglePassword = (fieldId) => {
                const field = document.getElementById(fieldId);
                const type = field.type === 'password' ? 'text' : 'password';
                field.type = type;
            };

            document.querySelectorAll('.toggle-password').forEach(btn => {
                btn.addEventListener('click', function () {
                    const fieldId = btn.getAttribute('data-toggle');
                    togglePassword(fieldId);
                    btn.querySelector('i').classList.toggle('fa-eye');
                    btn.querySelector('i').classList.toggle('fa-eye-slash');
                });
            });

            document.getElementById('cancelButton').addEventListener('click', function () {
                window.location.href = "/app/feeds";
            });

            document.getElementById('createButton').addEventListener('click', function () {
                const selectedDays = [];
                ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'].forEach(day => {
                    if (document.getElementById(day).checked) {
                        selectedDays.push(day);
                    }
                });

                const intervalUnit = document.querySelector('.input-group select').value;

                const feedData = {
                    feed_name: document.getElementById('feed_name').value.trim(),
                    store_hash: document.getElementById('store_hash').value.trim(),
                    x_auth_token: document.getElementById('x_auth_token').value.trim(),
                    client_id: document.getElementById('client_id').value.trim(),
                    formulas: document.getElementById('formulas').value.trim(),
                    company_id: document.getElementById('company_id').value.trim(),
                    client_email: document.getElementById('client_email').value.trim(),
                    private_key: document.getElementById('private_key').value.trim(),
                    recurrence: {
                        intervalUnit: intervalUnit,
                        selectedDays: selectedDays
                    },
                    domain: document.getElementById('domain').value.trim()
                };

                for (let key in feedData) {
                    if (feedData[key] === "") {
                        alert(`The field ${key} cannot be empty`);
                        return;
                    }
                }

                if (feedData.recurrence.selectedDays.length === 0) {
                    alert("Please select at least one day of the week");
                    return;
                }

                fetch('/feeds/createFeed', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(feedData)
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.message === "Feed created successfully") {
                            alert("Feed created successfully");
                            window.location.href = "/app/feeds";
                        } else {
                            alert("Error creating feed: " + data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert("Error creating feed");
                    });
            });

            document.getElementById('deleteAllButton').addEventListener('click', function () {
                if (confirm("¿Estás seguro de que deseas eliminar todos los campos?")) {
                    document.getElementById('createForm').reset();
                }
            });

            document.getElementById('undoButton').addEventListener('click', function () {
                // Implementar la funcionalidad de deshacer si es necesario.
                alert("Funcionalidad de deshacer no implementada");
            });

            document.getElementById('finishButton').addEventListener('click', function () {
                alert("Operación terminada");
                window.location.href = "/app/feeds";
            });
        });

        var formulasInput = document.getElementById('formulas');
        if (formulasInput) {
            formulasInput.addEventListener('click', function () {
                var formulasModal = new bootstrap.Modal(document.getElementById('formulasModal'), {
                    backdrop: 'static',
                    keyboard: false
                });
                formulasModal.show();
            });
        }

        var closeModalButton = document.getElementById('closeModalButton');
        if (closeModalButton) {
            closeModalButton.addEventListener('click', function () {
                var formulaText = document.getElementById('formulaText').value;
                var formulasInput = document.getElementById('formulas');
                if (formulasInput) {
                    formulasInput.value = formulaText;
                }
            });
        }
    </script>
</body>

</html>
