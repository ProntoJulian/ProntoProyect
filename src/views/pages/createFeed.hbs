<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crear Feed</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .content {
            padding: 1rem;
        }

        .editable {
            display: none;
        }

        .editing .editable {
            display: inline;
        }

        .editing .non-editable {
            display: none;
        }

        .toggle-password {
            cursor: pointer;
        }

        .hourglass-icon {
            font-size: 48px;
            color: #007BFF;
            animation: rotateHourglass 5s infinite linear;
        }

        #alertContainer {
            margin-bottom: 1rem;
        }

        @keyframes rotateHourglass {
            0% {
                transform: rotate(0deg);
            }

            50% {
                transform: rotate(180deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        #fieldsTable td,
        #operatorTable td,
        #valueTable td,
        #logicalOperatorsTable td {
            border: 1px solid #dee2e6;
            padding: 8px;
            text-align: center;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        #fieldsTable td:hover,
        #operatorTable td:hover,
        #valueTable td:hover,
        #logicalOperatorsTable td:hover {
            background-color: #f8f9fa;
        }

        #fieldsTable,
        #operatorTable,
        #valueTable,
        #logicalOperatorsTable {
            border-collapse: collapse;
            width: 100%;
        }

        .field-table-header {
            background-color: #f8f9fa;
            font-weight: bold;
        }

        .modal-body {
            padding: 20px;
        }
    </style>
</head>

<body>
    <div class="content">
        <div class="container mt-5">
            <div class="card">
                <div class="card-header">
                    <h2>Crear Nuevo Feed</h2>
                </div>
                <div class="card-body">
                    <form id="createForm">
                        <div class="mb-3">
                            <label for="feed_name" class="form-label">Feed Name</label>
                            <input type="text" class="form-control" id="feed_name">
                        </div>
                        <div class="mb-3">
                            <label for="domain" class="form-label">Domain</label>
                            <input type="text" class="form-control" id="domain">
                        </div>
                        <div class="mb-3">
                            <label for="store_hash" class="form-label">Store Hash</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="store_hash">
                                <span class="input-group-text toggle-password" data-toggle="store_hash"><i
                                        class="fas fa-eye"></i></span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="x_auth_token" class="form-label">x_auth_token</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="x_auth_token">
                                <span class="input-group-text toggle-password" data-toggle="x_auth_token"><i
                                        class="fas fa-eye"></i></span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="client_id" class="form-label">Merchant ID</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="client_id">
                                <span class="input-group-text toggle-password" data-toggle="client_id"><i
                                        class="fas fa-eye"></i></span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="client_email" class="form-label">Client Email</label>
                            <input type="email" class="form-control" id="client_email">
                        </div>
                        <div class="mb-3">
                            <label for="private_key" class="form-label">Private Key</label>
                            <div class="input-group">
                                <textarea class="form-control password-protected" id="private_key" rows="3"
                                    maxlength="2500"></textarea>
                                <span class="input-group-text toggle-password" data-toggle="private_key"><i
                                        class="fas fa-eye"></i></span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="formulas" class="form-label">Formulas</label>
                            <input type="text" class="form-control" id="formulas" readonly>
                        </div>
                        <div class="mb-3">
                            <label for="company_id" class="form-label">Company</label>
                            <select class="form-control" id="company_id" disabled>
                                {{#each companies}}
                                <option value="{{this.company_id}}">{{this.company_name}}</option>
                                {{/each}}
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Custom recurrence</label>
                            <div class="input-group mb-3">
                                <span class="input-group-text">Repeat every</span>
                                <select class="form-control">
                                    <option value="1">1 hour</option>
                                    <option value="3">3 hours</option>
                                    <option value="6">6 hours</option>
                                    <option value="12">12 hours</option>
                                </select>
                            </div>
                            <div class="btn-group" role="group" aria-label="Repeat on">
                                <input type="checkbox" class="btn-check" id="monday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="monday">M</label>

                                <input type="checkbox" class="btn-check" id="tuesday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="tuesday">T</label>

                                <input type="checkbox" class="btn-check" id="wednesday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="wednesday">W</label>

                                <input type="checkbox" class="btn-check" id="thursday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="thursday">T</label>

                                <input type="checkbox" class="btn-check" id="friday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="friday">F</label>

                                <input type="checkbox" class="btn-check" id="saturday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="saturday">S</label>

                                <input type="checkbox" class="btn-check" id="sunday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="sunday">S</label>
                            </div>
                        </div>
                        <div class="action-buttons">
                            <button type="button" class="btn btn-primary" id="createButton">Create</button>
                            <button type="button" class="btn btn-secondary" id="cancelButton">Cancel</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para las Formulas -->
    <div class="modal fade" id="formulasModal" tabindex="-1" aria-labelledby="formulasModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="formulasModalLabel">Edit Formulas</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="alertContainer" class="alert alert-warning" role="alert" style="display: none;">
                        <span id="alertMessage"></span>
                    </div>
                    <div class="mb-3">
                        <label for="formulaText" class="form-label">Formulas</label>
                        <input type="text" class="form-control" id="formulaText" readonly>
                    </div>


                    <div id="fields" class="tab-content">
                        <table id="fieldsTable"></table>
                    </div>
                    <div id="operators" class="tab-content" style="display: none;">
                        <table id="operatorTable"></table>
                    </div>
                    <div id="values" class="tab-content" style="display: none;">
                        <table id="valueTable"></table>
                    </div>
                    <div id="logical_operators" class="tab-content" style="display: none;">
                        <table id="logicalOperatorsTable">
                            <tr>
                                <td onclick="selectLogicalOperator('AND')">AND</td>
                                <td onclick="selectLogicalOperator('OR')">OR</td>
                            </tr>
                        </table>
                    </div>
                    <div id="customFieldSection" class="tab-content" style="display: none;">
                        <div class="mb-3">
                            <label for="customFieldName" class="form-label">Enter Custom Field</label>
                            <input type="text" class="form-control" id="customFieldName">
                        </div>
                        <div class="mb-3">
                            <label for="customFieldOperator" class="form-label">Select Operator</label>
                            <select class="form-control" id="customFieldOperator">
                                <option value="=">=</option>
                                <option value="!=">!=</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label for="customFieldValue" class="form-label">Enter Custom Field Value</label>
                            <input type="text" class="form-control" id="customFieldValue">
                        </div>
                        <button type="button" class="btn btn-primary" onclick="addCustomField()">Add Custom
                            Field</button>
                    </div>
                    <div class="mt-3">
                        {{!-- <div class="d-grid gap-2 mb-2">
                            <button type="button" class="btn btn-secondary" onclick="showTab('customFieldSection')">Add
                                Custom Field</button>
                        </div> --}}
                        <div class="d-flex justify-content-between">
                            <button type="button" class="btn btn-danger" id="deleteAllFormulasButton"><i
                                    class="fas fa-trash"></i> Eliminar Todo</button>
                            <button type="button" class="btn btn-warning" id="undoFormulasButton"
                                onclick="clearLast()"><i class="fas fa-undo"></i> Deshacer</button>

                            <button type="button" class="btn btn-success" id="finishFormulasButton"><i
                                    class="fas fa-check"></i> Terminar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>




    <!-- Bootstrap JS bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>

        // Funcionalidad de crear nuevo feed
        document.getElementById('createButton').addEventListener('click', function () {
            // Obtener los valores de los días seleccionados
            const selectedDays = [];
            ['monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday', 'sunday'].forEach(day => {
                if (document.getElementById(day).checked) {
                    selectedDays.push(day);
                }
            });

            // Obtener el valor del intervalo de tiempo
            const intervalUnit = document.querySelector('.input-group select').value;

            const feedData = {
                feed_name: document.getElementById('feed_name').value.trim(),
                store_hash: document.getElementById('store_hash').value.trim(),
                x_auth_token: document.getElementById('x_auth_token').value.trim(),
                client_id: document.getElementById('client_id').value.trim(),
                formulas: document.getElementById('formulas').value.trim(),
                company_id: document.getElementById('company_id').value.trim(),
                client_email: document.getElementById('client_email').value.trim(),
                private_key: document.getElementById('private_key').value.trim(),
                recurrence: {
                    intervalUnit: intervalUnit,
                    selectedDays: selectedDays
                },
                domain: document.getElementById('domain').value.trim()
            };

            // Verificar que ningún campo esté vacío (incluyendo los nuevos campos de recurrencia)
            for (let key in feedData) {
                if (feedData[key] === "") {
                    alert(`The field ${key} cannot be empty`);
                    return;
                }
            }

            if (feedData.recurrence.selectedDays.length === 0) {
                alert("Please select at least one day of the week");
                return;
            }

            fetch('/feeds/createFeed', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(feedData)
            })
                .then(response => response.json())
                .then(data => {
                    if (data.message === "Feed created successfully") {
                        alert("Feed created successfully");
                        window.location.href = "/app/feeds";
                    } else {
                        alert("Error creating feed");
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert("Error creating feed");
                });
        });

        // Funcionalidad de cancelar en el modal de creación
        document.getElementById('cancelButton').addEventListener('click', function () {
            window.location.href = "/app/feeds";
        });


        var operators = {
            type: ['=', '!='],
            price: ['=', '!=', '>', '<', '>=', '<='],
            is_featured: ['=', '!='],
            availability: ['=', '!='],
            is_visible: ['=', '!='],
            is_free_shipping: ['=', '!='],
            id: ['=', '!=', '>', '<', '>=', '<='],
            weight: ['=', '!=', '>', '<', '>=', '<='],
            condition: ['=', '!='],
        };

        var values = {
            type: ['digital', 'physical'],
            price: [],
            is_featured: ['true', 'false'],
            availability: ['available', 'disabled', 'preorder'],
            is_visible: ['true', 'false'],
            is_free_shipping: ['true', 'false'],
            id: [],
            weight: [],
            condition: ["new", "used", "refurbished"]
        };

        var fields = ['type', 'price', 'is_featured', 'availability', 'is_visible', 'is_free_shipping', 'id', 'weight', 'condition', 'Add Custom Field'];
        var selectedFields = new Set();
        var currentExpression = [];
        var fullExpression = [];
        var customFieldsExpressions = [];
        var fieldsExpressions = [];
        var isCustomFieldMode = false;
        var lastOperator = '';
        var lastLogicalOperator = '';

        function loadFields() {
            console.log('loadFields called');
            var fieldsTable = document.getElementById('fieldsTable');
            fieldsTable.innerHTML = '';
            var row = document.createElement('tr');
            fields.forEach(function (field, index) {
                var cell = document.createElement('td');
                cell.innerText = field;
                cell.className = (selectedFields.has(field) && field !== 'price' && field !== 'id' && field !== 'weight') ? 'disabled' : '';
                cell.onclick = function () {
                    console.log('Field clicked:', field);
                    if (!selectedFields.has(field) || field === 'price' || field === 'id' || field === 'weight') {
                        selectField(field);
                        //hideAlert();
                    }
                };
                row.appendChild(cell);
                if ((index + 1) % 4 === 0) {
                    fieldsTable.appendChild(row);
                    row = document.createElement('tr');
                }
            });
            fieldsTable.appendChild(row);
            //showAlert('Please select a field');
        }

        function selectField(field) {
            console.log('selectField called:', field);
            if (field === 'Add Custom Field') {
                showTab('customFieldSection');
                //showAlert('Please enter the custom field details');
                return;
            }

            currentExpression = [field];
            if (field !== 'price' && field !== 'id' && field !== 'weight') {
                selectedFields.add(field);
            }
            loadFields();
            loadOperators(field);
            showTab('operators');
            updateFormulaText(); // Llamar a la función aquí para actualizar inmediatamente
        }



        function loadOperators(field) {
            console.log('loadOperators called:', field);
            var operatorTable = document.getElementById('operatorTable');
            operatorTable.innerHTML = '';
            var row = document.createElement('tr');
            //showAlert('Please select an operator');
            operators[field].forEach(function (op) {
                var cell = document.createElement('td');
                cell.innerText = op;
                cell.onclick = function () {
                    console.log('Operator clicked:', op);
                    currentExpression.push(op);
                    loadValues(field);
                    showTab('values');
                    updateFormulaText(); // Llamar a la función aquí para actualizar inmediatamente
                    //showAlert('Please select a value');
                };
                row.appendChild(cell);
            });
            operatorTable.appendChild(row);

        }


        function loadValues(field) {
            console.log('loadValues called:', field);
            var valueTable = document.getElementById('valueTable');
            valueTable.innerHTML = '';
            var row = document.createElement('tr');
            if (field === 'price' || field === 'id' || field === 'weight') {
                var cell = document.createElement('td');
                var numberInput = document.createElement('input');
                numberInput.type = 'number';
                numberInput.min = 0; // Esto asegura que el número no puede ser negativo
                numberInput.className = 'form-control';

                var confirmButton = document.createElement('button');
                confirmButton.className = 'btn btn-success';
                confirmButton.innerText = '✔';
                confirmButton.onclick = function () {
                    if (numberInput.value >= 0) { // Validación para asegurar que el número no es negativo
                        console.log('Number confirmed:', numberInput.value);
                        currentExpression.push(numberInput.value);
                        finalizeSelection();
                        //showAlert('Please select a field');
                        updateFormulaText();  // Llamar a la función aquí
                    } else {
                        alert("Please enter a non-negative number."); // Mensaje de alerta si el número es negativo
                    }
                };

                var inputWrapper = document.createElement('div');
                inputWrapper.style.display = 'flex';
                inputWrapper.style.alignItems = 'center';
                inputWrapper.appendChild(numberInput);
                inputWrapper.appendChild(confirmButton);

                cell.appendChild(inputWrapper);
                row.appendChild(cell);
            } else {
                values[field].forEach(function (val) {
                    var cell = document.createElement('td');
                    cell.innerText = val;
                    cell.onclick = function () {
                        console.log('Value clicked:', val);
                        currentExpression.push(val);
                        finalizeSelection();
                        updateFormulaText();  // Llamar a la función aquí
                    };
                    row.appendChild(cell);
                });
            }
            valueTable.appendChild(row);

        }

        function finalizeSelection() {
            console.log('finalizeSelection called');
            console.log('currentExpression before finalizing:', currentExpression);
            var formulaText = document.getElementById('formulaText');
            var expressionStr = '[' + currentExpression.join(' ') + ']';
            fullExpression.push(expressionStr);

            if (isCustomFieldMode) {
                customFieldsExpressions.push(expressionStr);
            } else {
                fieldsExpressions.push(expressionStr);
            }

            console.log('fullExpression after finalizing:', fullExpression);
            formulaText.value = buildFormula();
            currentExpression = [];
            showTab('logical_operators');
        }


        function selectLogicalOperator(logicOp) {
            console.log('selectLogicalOperator called:', logicOp);
            var formulaText = document.getElementById('formulaText');
            console.log('fullExpression before adding logical operator:', fullExpression);

            if (fullExpression.length > 0 && (fullExpression[fullExpression.length - 1] !== 'AND' && fullExpression[fullExpression.length - 1] !== 'OR')) {
                fullExpression.push(logicOp);
                lastLogicalOperator = logicOp;
            }

            console.log('fullExpression after adding logical operator:', fullExpression);
            formulaText.value = buildFormula();
            showTab('fields');
        }


        document.getElementById('deleteAllFormulasButton').addEventListener('click', clearAll);

        function clearAll() {
            console.log('clearAll called');
            document.getElementById('formulaText').value = '';
            currentExpression = [];
            fullExpression = [];
            customFieldsExpressions = [];
            fieldsExpressions = [];
            selectedFields.clear();
            loadFields();
        }

        function clearLast() {
            console.log('clearLast called');
            if (fullExpression.length > 0) {
                const lastExpression = fullExpression.pop();
                if (customFieldsExpressions.includes(lastExpression)) {
                    customFieldsExpressions.pop();
                } else {
                    fieldsExpressions.pop();
                }
                document.getElementById('formulaText').value = buildFormula();
                loadFields();
                updateFormulaText();
            }
            showTab('fields'); // Llevar al usuario a la pestaña de selección de campos
        }


        document.addEventListener('DOMContentLoaded', function () {
            console.log('DOMContentLoaded event');
            loadFields();
            showTab('fields'); // Asegúrate de que el primer tab se muestre al cargar
        });

        function showTab(tabName) {
            console.log('showTab called:', tabName);
            var tabs = document.getElementsByClassName('tab-content');
            for (var i = 0; i < tabs.length; i++) {
                tabs[i].style.display = 'none';
            }
            document.getElementById(tabName).style.display = 'block';

            // Mostrar alertas específicas según la pestaña
            switch (tabName) {
                case 'fields':
                    showAlert('Please select a field');
                    break;
                case 'operators':
                    showAlert('Please select an operator');
                    break;
                case 'values':
                    showAlert('Please select a value');
                    break;
                case 'logical_operators':
                    showAlert('Please select a logical operator');
                    break;
                case 'customFieldSection':
                    showAlert('Please enter the custom field details');
                    break;
                default:
                    hideAlert();
                    break;
            }
        }



        document.getElementById('formulas').addEventListener('click', function () {
            console.log('Formulas clicked');
            var modal = new bootstrap.Modal(document.getElementById('formulasModal'));
            modal.show();
        });

        document.getElementById('finishFormulasButton').addEventListener('click', finalize);

        function finalize() {
            console.log('finalize called');
            alert("La fórmula ha sido finalizada.");
            var result = document.getElementById('formulas'); // Cambia 'result' a 'formulas'
            var currentSelection = document.getElementById('formulaText').value.trim(); // Usar el valor del input dentro del modal
            result.value = currentSelection; // Pasar el valor al input fuera del modal
            var modal = bootstrap.Modal.getInstance(document.getElementById('formulasModal'));
            modal.hide(); // Cerrar el modal usando Bootstrap 5
            fullExpression = [];
            customFieldsExpressions = [];
            fieldsExpressions = [];
            currentExpression = [];
        }

        function addCustomField() {
            var customFieldName = document.getElementById('customFieldName').value;
            var customFieldOperator = document.getElementById('customFieldOperator').value;
            var customFieldValue = document.getElementById('customFieldValue').value;

            if (customFieldName && customFieldOperator && customFieldValue) {
                currentExpression = [customFieldName, customFieldOperator, customFieldValue];
                isCustomFieldMode = true;
                finalizeSelection();
                //hideAlert();
            } else {
                alert('Please fill in all custom field details.');
            }
        }


        function updateFormulaText() {
            var formulaText = document.getElementById('formulaText');
            var customFieldsStr = customFieldsExpressions.join(' AND ');
            var fullStr = fullExpression.join(' ');

            if (customFieldsStr) {
                formulaText.value = '(' + customFieldsStr + ') AND ' + fullStr;
            } else {
                formulaText.value = fullStr;
            }
        }

        function buildFormula() {
            let customFieldsPart = '';
            if (customFieldsExpressions.length > 0) {
                customFieldsPart = `(${customFieldsExpressions.join(' ' + lastLogicalOperator + ' ')})`;
            }
            let fieldsPart = fieldsExpressions.join(' AND '); // Change this to handle other logical operators as needed
            if (customFieldsPart && fieldsPart) {
                return `${customFieldsPart} AND ${fieldsPart}`;
            } else {
                return customFieldsPart || fieldsPart;
            }
        }


        function showAlert(message) {
            console.log("Mensaje: ", message);
            const alertMessage = document.getElementById('alertMessage');
            const alertContainer = document.getElementById('alertContainer');

            if (!alertMessage || !alertContainer) {
                console.error('Alert elements not found in the DOM');
                return;
            }

            alertMessage.innerText = message;
            alertContainer.style.display = 'block';
            alertContainer.style.setProperty('display', 'block', 'important'); // Forzar la visibilidad
        }


        function hideAlert() {
            const alertContainer = document.getElementById('alertContainer');
            alertContainer.style.display = 'none';
        }



    </script>



</body>

</html>