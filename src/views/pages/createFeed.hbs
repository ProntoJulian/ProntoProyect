<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Crear Feed</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        .content {
            padding: 1rem;
        }

        .editable {
            display: none;
        }

        .editing .editable {
            display: inline;
        }

        .editing .non-editable {
            display: none;
        }

        .toggle-password {
            cursor: pointer;
        }

        .hourglass-icon {
            font-size: 48px;
            color: #007BFF;
            animation: rotateHourglass 5s infinite linear;
        }

        @keyframes rotateHourglass {
            0% {
                transform: rotate(0deg);
            }

            50% {
                transform: rotate(180deg);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        #fieldsTable td,
        #operatorTable td,
        #valueTable td,
        #logicalOperatorsTable td {
            border: 1px solid #dee2e6;
            padding: 8px;
            text-align: center;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        #fieldsTable td:hover,
        #operatorTable td:hover,
        #valueTable td:hover,
        #logicalOperatorsTable td:hover {
            background-color: #f8f9fa;
        }

        #fieldsTable,
        #operatorTable,
        #valueTable,
        #logicalOperatorsTable {
            border-collapse: collapse;
            width: 100%;
        }

        .field-table-header {
            background-color: #f8f9fa;
            font-weight: bold;
        }

        .modal-body {
            padding: 20px;
        }
    </style>
</head>

<body>
    <div class="content">
        <div class="container mt-5">
            <div class="card">
                <div class="card-header">
                    <h2>Crear Nuevo Feed</h2>
                </div>
                <div class="card-body">
                    <form id="createForm">
                        <div class="mb-3">
                            <label for="feed_name" class="form-label">Feed Name</label>
                            <input type="text" class="form-control" id="feed_name">
                        </div>
                        <div class="mb-3">
                            <label for="domain" class="form-label">Domain</label>
                            <input type="text" class="form-control" id="domain">
                        </div>
                        <div class="mb-3">
                            <label for="store_hash" class="form-label">Store Hash</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="store_hash">
                                <span class="input-group-text toggle-password" data-toggle="store_hash"><i
                                        class="fas fa-eye"></i></span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="x_auth_token" class="form-label">x_auth_token</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="x_auth_token">
                                <span class="input-group-text toggle-password" data-toggle="x_auth_token"><i
                                        class="fas fa-eye"></i></span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="client_id" class="form-label">Merchant ID</label>
                            <div class="input-group">
                                <input type="password" class="form-control" id="client_id">
                                <span class="input-group-text toggle-password" data-toggle="client_id"><i
                                        class="fas fa-eye"></i></span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="client_email" class="form-label">Client Email</label>
                            <input type="email" class="form-control" id="client_email">
                        </div>
                        <div class="mb-3">
                            <label for="private_key" class="form-label">Private Key</label>
                            <div class="input-group">
                                <textarea class="form-control password-protected" id="private_key" rows="3"
                                    maxlength="2500"></textarea>
                                <span class="input-group-text toggle-password" data-toggle="private_key"><i
                                        class="fas fa-eye"></i></span>
                            </div>
                        </div>
                        <div class="mb-3">
                            <label for="formulas" class="form-label">Formulas</label>
                            <input type="text" class="form-control" id="formulas" readonly>
                        </div>
                        <div class="mb-3">
                            <label for="company_id" class="form-label">Company</label>
                            <select class="form-control" id="company_id" disabled>
                                {{#each companies}}
                                <option value="{{this.company_id}}">{{this.company_name}}</option>
                                {{/each}}
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Custom recurrence</label>
                            <div class="input-group mb-3">
                                <span class="input-group-text">Repeat every</span>
                                <select class="form-control">
                                    <option value="1">1 hour</option>
                                    <option value="3">3 hours</option>
                                    <option value="6">6 hours</option>
                                    <option value="12">12 hours</option>
                                </select>
                            </div>
                            <div class="btn-group" role="group" aria-label="Repeat on">
                                <input type="checkbox" class="btn-check" id="monday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="monday">M</label>

                                <input type="checkbox" class="btn-check" id="tuesday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="tuesday">T</label>

                                <input type="checkbox" class="btn-check" id="wednesday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="wednesday">W</label>

                                <input type="checkbox" class="btn-check" id="thursday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="thursday">T</label>

                                <input type="checkbox" class="btn-check" id="friday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="friday">F</label>

                                <input type="checkbox" class="btn-check" id="saturday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="saturday">S</label>

                                <input type="checkbox" class="btn-check" id="sunday" autocomplete="off">
                                <label class="btn btn-outline-primary" for="sunday">S</label>
                            </div>
                        </div>
                        <div class="action-buttons">
                            <button type="button" class="btn btn-primary" id="createButton">Create</button>
                            <button type="button" class="btn btn-secondary" id="cancelButton">Cancel</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal para las Formulas -->
    <div class="modal fade" id="formulasModal" tabindex="-1" aria-labelledby="formulasModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="formulasModalLabel">Edit Formulas</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="formulaText" class="form-label">Formulas</label>
                        <input type="text" class="form-control" id="formulaText" readonly>
                    </div>
                    <div id="fields" class="tab-content">
                        <table id="fieldsTable"></table>
                    </div>
                    <div id="operators" class="tab-content" style="display: none;">
                        <table id="operatorTable"></table>
                    </div>
                    <div id="values" class="tab-content" style="display: none;">
                        <table id="valueTable"></table>
                    </div>
                    <div id="logical_operators" class="tab-content" style="display: none;">
                        <table id="logicalOperatorsTable">
                            <tr>
                                <td onclick="selectLogicalOperator('AND')">AND</td>
                                <td onclick="selectLogicalOperator('OR')">OR</td>
                            </tr>
                        </table>
                    </div>
                    <div class="mt-3">
                        <button type="button" class="btn btn-danger" id="deleteAllFormulasButton"><i
                                class="fas fa-trash"></i> Eliminar Todo</button>
                        <button type="button" class="btn btn-warning" id="undoFormulasButton"><i
                                class="fas fa-undo"></i> Deshacer</button>
                        <button type="button" class="btn btn-success" id="finishFormulasButton"><i
                                class="fas fa-check"></i> Terminar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        var operators = {
            type: ['=', '!='],
            price: ['=', '!=', '>', '<', '>=', '<='],
            is_featured: ['=', '!='],
            availability: ['=', '!='],
            is_visible: ['=', '!='],
            is_free_shipping: ['=', '!='],
            id: ['=', '!=', '>', '<', '>=', '<='],
            weight: ['=', '!=', '>', '<', '>=', '<='],
            condition: ['=', '!='],
        };

        var values = {
            type: ['digital', 'physical'],
            price: [],
            is_featured: ['true', 'false'],
            availability: ['available', 'disabled', 'preorder'],
            is_visible: ['true', 'false'],
            is_free_shipping: ['true', 'false'],
            id: [],
            weight: [],
            condition: ["new", "used", "refurbished"]
        };

        var fields = ['type', 'price', 'is_featured', 'availability', 'is_visible', 'is_free_shipping', 'id', 'weight', 'condition'];
        var selectedFields = new Set();
        var currentExpression = [];
        var fullExpression = [];

        function loadFields() {
            console.log('loadFields called');
            var fieldsTable = document.getElementById('fieldsTable');
            fieldsTable.innerHTML = '';
            var row = document.createElement('tr');
            fields.forEach(function (field, index) {
                var cell = document.createElement('td');
                cell.innerText = field;
                cell.className = (selectedFields.has(field) && field !== 'price' && field !== 'id' && field !== 'weight') ? 'disabled' : '';
                cell.onclick = function () {
                    console.log('Field clicked:', field);
                    if (!selectedFields.has(field) || field === 'price' || field === 'id' || field === 'weight') {
                        selectField(field);
                    }
                };
                row.appendChild(cell);
                if ((index + 1) % 4 === 0) {
                    fieldsTable.appendChild(row);
                    row = document.createElement('tr');
                }
            });
            fieldsTable.appendChild(row);
        }

        function selectField(field) {
            console.log('selectField called:', field);
            currentExpression = [field];
            if (field !== 'price' && field !== 'id' && field !== 'weight') {
                selectedFields.add(field);
            }
            loadFields();
            loadOperators(field);
            showTab('operators');
        }

        function loadOperators(field) {
            console.log('loadOperators called:', field);
            var operatorTable = document.getElementById('operatorTable');
            operatorTable.innerHTML = '';
            var row = document.createElement('tr');
            operators[field].forEach(function (op) {
                var cell = document.createElement('td');
                cell.innerText = op;
                cell.onclick = function () {
                    console.log('Operator clicked:', op);
                    currentExpression.push(op);
                    loadValues(field);
                    showTab('values');
                };
                row.appendChild(cell);
            });
            operatorTable.appendChild(row);
        }

        function loadValues(field) {
            console.log('loadValues called:', field);
            var valueTable = document.getElementById('valueTable');
            valueTable.innerHTML = '';
            var row = document.createElement('tr');
            if (field === 'price' || field === 'id' || field === 'weight') {
                var cell = document.createElement('td');
                var numberInput = document.createElement('input');
                numberInput.type = 'number';
                numberInput.min = 0;
                numberInput.className = 'form-control';

                var confirmButton = document.createElement('button');
                confirmButton.className = 'btn btn-success';
                confirmButton.innerText = '✔';
                confirmButton.onclick = function () {
                    console.log('Number confirmed:', numberInput.value);
                    currentExpression.push(numberInput.value);
                    finalizeSelection();
                };

                var inputWrapper = document.createElement('div');
                inputWrapper.style.display = 'flex';
                inputWrapper.style.alignItems = 'center';
                inputWrapper.appendChild(numberInput);
                inputWrapper.appendChild(confirmButton);

                cell.appendChild(inputWrapper);
                row.appendChild(cell);
            } else {
                values[field].forEach(function (val) {
                    var cell = document.createElement('td');
                    cell.innerText = val;
                    cell.onclick = function () {
                        console.log('Value clicked:', val);
                        currentExpression.push(val);
                        finalizeSelection();
                    };
                    row.appendChild(cell);
                });
            }
            valueTable.appendChild(row);
        }

        function finalizeSelection() {
            console.log('finalizeSelection called');
            console.log('currentExpression before finalizing:', currentExpression);
            var formulaText = document.getElementById('formulaText');
            var expressionStr = currentExpression.join(' ');
            fullExpression.push(expressionStr);
            console.log('fullExpression after finalizing:', fullExpression);
            formulaText.value = fullExpression.join(' ');
            currentExpression = [];
            showTab('logical_operators');
        }




        function selectLogicalOperator(logicOp) {
            console.log('selectLogicalOperator called:', logicOp);
            var formulaText = document.getElementById('formulaText');
            console.log('fullExpression before adding logical operator:', fullExpression);

            // Solo agregar operador lógico si el último no es un operador lógico
            if (fullExpression.length > 0 && fullExpression[fullExpression.length - 1] !== 'AND' && fullExpression[fullExpression.length - 1] !== 'OR') {
                fullExpression.push(logicOp);
            }
            console.log('fullExpression after adding logical operator:', fullExpression);
            formulaText.value = fullExpression.join(' ');
            currentExpression = [];
            showTab('fields');
        }




        function clearAll() {
            console.log('clearAll called');
            document.getElementById('formulaText').value = '';
            currentExpression = [];
            fullExpression = [];
            selectedFields.clear();
            loadFields();
        }

        function clearLast() {
            console.log('clearLast called');
            if (fullExpression.length > 0) {
                fullExpression.pop();
                document.getElementById('formulaText').value = fullExpression.join(' AND ');
                loadFields();
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            console.log('DOMContentLoaded event');
            loadFields();
        });

        function showTab(tabName) {
            console.log('showTab called:', tabName);
            var tabs = document.getElementsByClassName('tab-content');
            for (var i = 0; i < tabs.length; i++) {
                tabs[i].style.display = 'none';
            }
            document.getElementById(tabName).style.display = 'block';
        }

        // Agregar evento de clic al campo de texto "formulas" para abrir el modal
        document.getElementById('formulas').addEventListener('click', function () {
            console.log('Formulas clicked');
            var modal = new bootstrap.Modal(document.getElementById('formulasModal'));
            modal.show();
        });

        function finalize() {
            console.log('finalize called');
            alert("La fórmula ha sido finalizada.");
            var result = document.getElementById('formulas'); // Cambia 'result' a 'formulas'
            var currentSelection = document.getElementById('formulaText').value.trim(); // Usar el valor del input dentro del modal
            result.value = currentSelection; // Pasar el valor al input fuera del modal
            var modal = bootstrap.Modal.getInstance(document.getElementById('formulasModal'));
            modal.hide(); // Cerrar el modal usando Bootstrap 5
            // Reset fullExpression to ensure it doesn't add duplicate logical operators
            fullExpression = [];
            currentExpression = [];
        }
    </script>
</body>

</html>